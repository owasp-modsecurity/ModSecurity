// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: waf_format.proto

#include "waf_format.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace waf_format {
class DetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Details>
      _instance;
} _Details_default_instance_;
class PropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Properties>
      _instance;
} _Properties_default_instance_;
class Waf_FormatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Waf_Format>
      _instance;
} _Waf_Format_default_instance_;
}  // namespace waf_format
namespace protobuf_waf_5fformat_2eproto {
void InitDefaultsDetailsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::waf_format::_Details_default_instance_;
    new (ptr) ::waf_format::Details();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::waf_format::Details::InitAsDefaultInstance();
}

void InitDefaultsDetails() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetailsImpl);
}

void InitDefaultsPropertiesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_waf_5fformat_2eproto::InitDefaultsDetails();
  {
    void* ptr = &::waf_format::_Properties_default_instance_;
    new (ptr) ::waf_format::Properties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::waf_format::Properties::InitAsDefaultInstance();
}

void InitDefaultsProperties() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertiesImpl);
}

void InitDefaultsWaf_FormatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_waf_5fformat_2eproto::InitDefaultsProperties();
  {
    void* ptr = &::waf_format::_Waf_Format_default_instance_;
    new (ptr) ::waf_format::Waf_Format();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::waf_format::Waf_Format::InitAsDefaultInstance();
}

void InitDefaultsWaf_Format() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWaf_FormatImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Details, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Details, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Details, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Details, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Details, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Details, line_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, clientip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, clientport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, requesturi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, rulesettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, rulesetversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, ruleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Properties, hostname_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  10,
  11,
  9,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Waf_Format, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Waf_Format, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Waf_Format, resourceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Waf_Format, operationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Waf_Format, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::waf_format::Waf_Format, properties_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::waf_format::Details)},
  { 13, 30, sizeof(::waf_format::Properties)},
  { 42, 51, sizeof(::waf_format::Waf_Format)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::waf_format::_Details_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::waf_format::_Properties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::waf_format::_Waf_Format_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "waf_format.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020waf_format.proto\022\nwaf_format\"D\n\007Detail"
      "s\022\017\n\007message\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\022\014\n\004file"
      "\030\003 \001(\t\022\014\n\004line\030\004 \001(\t\"\203\003\n\nProperties\022\022\n\ni"
      "nstanceId\030\001 \001(\t\022\020\n\010clientIp\030\002 \001(\t\022\022\n\ncli"
      "entPort\030\003 \001(\t\022\022\n\nrequestUri\030\004 \001(\t\022\023\n\013rul"
      "eSetType\030\005 \001(\t\022\026\n\016ruleSetVersion\030\006 \001(\t\022\016"
      "\n\006ruleId\030\007 \001(\t\022\017\n\007message\030\010 \001(\t\0221\n\006actio"
      "n\030\t \001(\0162!.waf_format.Properties.ActionTy"
      "pe\022-\n\004site\030\n \001(\0162\037.waf_format.Properties"
      ".SiteType\022$\n\007details\030\013 \001(\0132\023.waf_format."
      "Details\022\020\n\010hostname\030\014 \001(\t\"\'\n\nActionType\022"
      "\014\n\010Detected\020\000\022\013\n\007Blocked\020\001\"\026\n\010SiteType\022\n"
      "\n\006Global\020\000\"u\n\nWaf_Format\022\022\n\nresourceId\030\001"
      " \001(\t\022\025\n\roperationName\030\002 \001(\t\022\020\n\010category\030"
      "\003 \001(\t\022*\n\nproperties\030\004 \001(\0132\026.waf_format.P"
      "roperties"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 609);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "waf_format.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_waf_5fformat_2eproto
namespace waf_format {
const ::google::protobuf::EnumDescriptor* Properties_ActionType_descriptor() {
  protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_waf_5fformat_2eproto::file_level_enum_descriptors[0];
}
bool Properties_ActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Properties_ActionType Properties::Detected;
const Properties_ActionType Properties::Blocked;
const Properties_ActionType Properties::ActionType_MIN;
const Properties_ActionType Properties::ActionType_MAX;
const int Properties::ActionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Properties_SiteType_descriptor() {
  protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_waf_5fformat_2eproto::file_level_enum_descriptors[1];
}
bool Properties_SiteType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Properties_SiteType Properties::Global;
const Properties_SiteType Properties::SiteType_MIN;
const Properties_SiteType Properties::SiteType_MAX;
const int Properties::SiteType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Details::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Details::kMessageFieldNumber;
const int Details::kDataFieldNumber;
const int Details::kFileFieldNumber;
const int Details::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Details::Details()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_waf_5fformat_2eproto::InitDefaultsDetails();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:waf_format.Details)
}
Details::Details(const Details& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file()) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_line()) {
    line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_);
  }
  // @@protoc_insertion_point(copy_constructor:waf_format.Details)
}

void Details::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Details::~Details() {
  // @@protoc_insertion_point(destructor:waf_format.Details)
  SharedDtor();
}

void Details::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Details::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Details::descriptor() {
  ::protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_waf_5fformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Details& Details::default_instance() {
  ::protobuf_waf_5fformat_2eproto::InitDefaultsDetails();
  return *internal_default_instance();
}

Details* Details::New(::google::protobuf::Arena* arena) const {
  Details* n = new Details;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Details::Clear() {
// @@protoc_insertion_point(message_clear_start:waf_format.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*file_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!line_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*line_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Details::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:waf_format.Details)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Details.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Details.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Details.file");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->line().data(), static_cast<int>(this->line().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Details.line");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:waf_format.Details)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:waf_format.Details)
  return false;
#undef DO_
}

void Details::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:waf_format.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional string data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // optional string file = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file(), output);
  }

  // optional string line = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line().data(), static_cast<int>(this->line().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->line(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:waf_format.Details)
}

::google::protobuf::uint8* Details::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:waf_format.Details)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional string data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // optional string file = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file(), target);
  }

  // optional string line = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line().data(), static_cast<int>(this->line().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Details.line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->line(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:waf_format.Details)
  return target;
}

size_t Details::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:waf_format.Details)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional string data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

    // optional string file = 3;
    if (has_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file());
    }

    // optional string line = 4;
    if (has_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->line());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Details::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:waf_format.Details)
  GOOGLE_DCHECK_NE(&from, this);
  const Details* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Details>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:waf_format.Details)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:waf_format.Details)
    MergeFrom(*source);
  }
}

void Details::MergeFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:waf_format.Details)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_file();
      file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_line();
      line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_);
    }
  }
}

void Details::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:waf_format.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Details::CopyFrom(const Details& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:waf_format.Details)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Details::IsInitialized() const {
  return true;
}

void Details::Swap(Details* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Details::InternalSwap(Details* other) {
  using std::swap;
  message_.Swap(&other->message_);
  data_.Swap(&other->data_);
  file_.Swap(&other->file_);
  line_.Swap(&other->line_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Details::GetMetadata() const {
  protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_waf_5fformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Properties::InitAsDefaultInstance() {
  ::waf_format::_Properties_default_instance_._instance.get_mutable()->details_ = const_cast< ::waf_format::Details*>(
      ::waf_format::Details::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Properties::kInstanceIdFieldNumber;
const int Properties::kClientIpFieldNumber;
const int Properties::kClientPortFieldNumber;
const int Properties::kRequestUriFieldNumber;
const int Properties::kRuleSetTypeFieldNumber;
const int Properties::kRuleSetVersionFieldNumber;
const int Properties::kRuleIdFieldNumber;
const int Properties::kMessageFieldNumber;
const int Properties::kActionFieldNumber;
const int Properties::kSiteFieldNumber;
const int Properties::kDetailsFieldNumber;
const int Properties::kHostnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Properties::Properties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_waf_5fformat_2eproto::InitDefaultsProperties();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:waf_format.Properties)
}
Properties::Properties(const Properties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instanceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instanceid()) {
    instanceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instanceid_);
  }
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clientip()) {
    clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
  }
  clientport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clientport()) {
    clientport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientport_);
  }
  requesturi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_requesturi()) {
    requesturi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requesturi_);
  }
  rulesettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rulesettype()) {
    rulesettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulesettype_);
  }
  rulesetversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rulesetversion()) {
    rulesetversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulesetversion_);
  }
  ruleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ruleid()) {
    ruleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ruleid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.has_details()) {
    details_ = new ::waf_format::Details(*from.details_);
  } else {
    details_ = NULL;
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&site_) -
    reinterpret_cast<char*>(&action_)) + sizeof(site_));
  // @@protoc_insertion_point(copy_constructor:waf_format.Properties)
}

void Properties::SharedCtor() {
  _cached_size_ = 0;
  instanceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientport_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requesturi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulesettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulesetversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ruleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&details_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&site_) -
      reinterpret_cast<char*>(&details_)) + sizeof(site_));
}

Properties::~Properties() {
  // @@protoc_insertion_point(destructor:waf_format.Properties)
  SharedDtor();
}

void Properties::SharedDtor() {
  instanceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientport_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requesturi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulesettype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulesetversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ruleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete details_;
}

void Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties::descriptor() {
  ::protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_waf_5fformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Properties& Properties::default_instance() {
  ::protobuf_waf_5fformat_2eproto::InitDefaultsProperties();
  return *internal_default_instance();
}

Properties* Properties::New(::google::protobuf::Arena* arena) const {
  Properties* n = new Properties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Properties::Clear() {
// @@protoc_insertion_point(message_clear_start:waf_format.Properties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!instanceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*instanceid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!clientip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*clientip_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!clientport_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*clientport_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!requesturi_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*requesturi_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!rulesettype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*rulesettype_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!rulesetversion_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*rulesetversion_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!ruleid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ruleid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*message_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!hostname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hostname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(details_ != NULL);
      details_->Clear();
    }
  }
  if (cached_has_bits & 3072u) {
    ::memset(&action_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&site_) -
        reinterpret_cast<char*>(&action_)) + sizeof(site_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:waf_format.Properties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string instanceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instanceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->instanceid().data(), static_cast<int>(this->instanceid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.instanceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string clientIp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientip().data(), static_cast<int>(this->clientip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.clientIp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string clientPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientport()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientport().data(), static_cast<int>(this->clientport().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.clientPort");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string requestUri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requesturi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requesturi().data(), static_cast<int>(this->requesturi().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.requestUri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ruleSetType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rulesettype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rulesettype().data(), static_cast<int>(this->rulesettype().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.ruleSetType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ruleSetVersion = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rulesetversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rulesetversion().data(), static_cast<int>(this->rulesetversion().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.ruleSetVersion");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ruleId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ruleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ruleid().data(), static_cast<int>(this->ruleid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.ruleId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .waf_format.Properties.ActionType action = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::waf_format::Properties_ActionType_IsValid(value)) {
            set_action(static_cast< ::waf_format::Properties_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .waf_format.Properties.SiteType site = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::waf_format::Properties_SiteType_IsValid(value)) {
            set_site(static_cast< ::waf_format::Properties_SiteType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .waf_format.Details details = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hostname = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Properties.hostname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:waf_format.Properties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:waf_format.Properties)
  return false;
#undef DO_
}

void Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:waf_format.Properties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string instanceId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instanceid().data(), static_cast<int>(this->instanceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.instanceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instanceid(), output);
  }

  // optional string clientIp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientip().data(), static_cast<int>(this->clientip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.clientIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientip(), output);
  }

  // optional string clientPort = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientport().data(), static_cast<int>(this->clientport().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.clientPort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientport(), output);
  }

  // optional string requestUri = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requesturi().data(), static_cast<int>(this->requesturi().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.requestUri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->requesturi(), output);
  }

  // optional string ruleSetType = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulesettype().data(), static_cast<int>(this->rulesettype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.ruleSetType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->rulesettype(), output);
  }

  // optional string ruleSetVersion = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulesetversion().data(), static_cast<int>(this->rulesetversion().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.ruleSetVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->rulesetversion(), output);
  }

  // optional string ruleId = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ruleid().data(), static_cast<int>(this->ruleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.ruleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ruleid(), output);
  }

  // optional string message = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->message(), output);
  }

  // optional .waf_format.Properties.ActionType action = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->action(), output);
  }

  // optional .waf_format.Properties.SiteType site = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->site(), output);
  }

  // optional .waf_format.Details details = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->details_, output);
  }

  // optional string hostname = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->hostname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:waf_format.Properties)
}

::google::protobuf::uint8* Properties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:waf_format.Properties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string instanceId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instanceid().data(), static_cast<int>(this->instanceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.instanceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instanceid(), target);
  }

  // optional string clientIp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientip().data(), static_cast<int>(this->clientip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.clientIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientip(), target);
  }

  // optional string clientPort = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientport().data(), static_cast<int>(this->clientport().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.clientPort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientport(), target);
  }

  // optional string requestUri = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requesturi().data(), static_cast<int>(this->requesturi().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.requestUri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->requesturi(), target);
  }

  // optional string ruleSetType = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulesettype().data(), static_cast<int>(this->rulesettype().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.ruleSetType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->rulesettype(), target);
  }

  // optional string ruleSetVersion = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulesetversion().data(), static_cast<int>(this->rulesetversion().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.ruleSetVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rulesetversion(), target);
  }

  // optional string ruleId = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ruleid().data(), static_cast<int>(this->ruleid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.ruleId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ruleid(), target);
  }

  // optional string message = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->message(), target);
  }

  // optional .waf_format.Properties.ActionType action = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->action(), target);
  }

  // optional .waf_format.Properties.SiteType site = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->site(), target);
  }

  // optional .waf_format.Details details = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->details_, deterministic, target);
  }

  // optional string hostname = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Properties.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->hostname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:waf_format.Properties)
  return target;
}

size_t Properties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:waf_format.Properties)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string instanceId = 1;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instanceid());
    }

    // optional string clientIp = 2;
    if (has_clientip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientip());
    }

    // optional string clientPort = 3;
    if (has_clientport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientport());
    }

    // optional string requestUri = 4;
    if (has_requesturi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requesturi());
    }

    // optional string ruleSetType = 5;
    if (has_rulesettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rulesettype());
    }

    // optional string ruleSetVersion = 6;
    if (has_rulesetversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rulesetversion());
    }

    // optional string ruleId = 7;
    if (has_ruleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ruleid());
    }

    // optional string message = 8;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string hostname = 12;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional .waf_format.Details details = 11;
    if (has_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->details_);
    }

    // optional .waf_format.Properties.ActionType action = 9;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
    }

    // optional .waf_format.Properties.SiteType site = 10;
    if (has_site()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->site());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:waf_format.Properties)
  GOOGLE_DCHECK_NE(&from, this);
  const Properties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Properties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:waf_format.Properties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:waf_format.Properties)
    MergeFrom(*source);
  }
}

void Properties::MergeFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:waf_format.Properties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_instanceid();
      instanceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instanceid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_clientip();
      clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_clientport();
      clientport_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientport_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_requesturi();
      requesturi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requesturi_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_rulesettype();
      rulesettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulesettype_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_rulesetversion();
      rulesetversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulesetversion_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_ruleid();
      ruleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ruleid_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_details()->::waf_format::Details::MergeFrom(from.details());
    }
    if (cached_has_bits & 0x00000400u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000800u) {
      site_ = from.site_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Properties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:waf_format.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties::CopyFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:waf_format.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties::IsInitialized() const {
  return true;
}

void Properties::Swap(Properties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Properties::InternalSwap(Properties* other) {
  using std::swap;
  instanceid_.Swap(&other->instanceid_);
  clientip_.Swap(&other->clientip_);
  clientport_.Swap(&other->clientport_);
  requesturi_.Swap(&other->requesturi_);
  rulesettype_.Swap(&other->rulesettype_);
  rulesetversion_.Swap(&other->rulesetversion_);
  ruleid_.Swap(&other->ruleid_);
  message_.Swap(&other->message_);
  hostname_.Swap(&other->hostname_);
  swap(details_, other->details_);
  swap(action_, other->action_);
  swap(site_, other->site_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Properties::GetMetadata() const {
  protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_waf_5fformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Waf_Format::InitAsDefaultInstance() {
  ::waf_format::_Waf_Format_default_instance_._instance.get_mutable()->properties_ = const_cast< ::waf_format::Properties*>(
      ::waf_format::Properties::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Waf_Format::kResourceIdFieldNumber;
const int Waf_Format::kOperationNameFieldNumber;
const int Waf_Format::kCategoryFieldNumber;
const int Waf_Format::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Waf_Format::Waf_Format()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_waf_5fformat_2eproto::InitDefaultsWaf_Format();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:waf_format.Waf_Format)
}
Waf_Format::Waf_Format(const Waf_Format& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resourceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resourceid()) {
    resourceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resourceid_);
  }
  operationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_operationname()) {
    operationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operationname_);
  }
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category()) {
    category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.has_properties()) {
    properties_ = new ::waf_format::Properties(*from.properties_);
  } else {
    properties_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:waf_format.Waf_Format)
}

void Waf_Format::SharedCtor() {
  _cached_size_ = 0;
  resourceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  properties_ = NULL;
}

Waf_Format::~Waf_Format() {
  // @@protoc_insertion_point(destructor:waf_format.Waf_Format)
  SharedDtor();
}

void Waf_Format::SharedDtor() {
  resourceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete properties_;
}

void Waf_Format::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Waf_Format::descriptor() {
  ::protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_waf_5fformat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Waf_Format& Waf_Format::default_instance() {
  ::protobuf_waf_5fformat_2eproto::InitDefaultsWaf_Format();
  return *internal_default_instance();
}

Waf_Format* Waf_Format::New(::google::protobuf::Arena* arena) const {
  Waf_Format* n = new Waf_Format;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Waf_Format::Clear() {
// @@protoc_insertion_point(message_clear_start:waf_format.Waf_Format)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!resourceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resourceid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!operationname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*operationname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!category_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*category_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(properties_ != NULL);
      properties_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Waf_Format::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:waf_format.Waf_Format)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resourceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resourceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resourceid().data(), static_cast<int>(this->resourceid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Waf_Format.resourceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string operationName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationname().data(), static_cast<int>(this->operationname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Waf_Format.operationName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category().data(), static_cast<int>(this->category().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "waf_format.Waf_Format.category");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .waf_format.Properties properties = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:waf_format.Waf_Format)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:waf_format.Waf_Format)
  return false;
#undef DO_
}

void Waf_Format::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:waf_format.Waf_Format)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string resourceId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resourceid().data(), static_cast<int>(this->resourceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Waf_Format.resourceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resourceid(), output);
  }

  // optional string operationName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationname().data(), static_cast<int>(this->operationname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Waf_Format.operationName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operationname(), output);
  }

  // optional string category = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Waf_Format.category");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->category(), output);
  }

  // optional .waf_format.Properties properties = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->properties_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:waf_format.Waf_Format)
}

::google::protobuf::uint8* Waf_Format::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:waf_format.Waf_Format)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string resourceId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resourceid().data(), static_cast<int>(this->resourceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Waf_Format.resourceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resourceid(), target);
  }

  // optional string operationName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationname().data(), static_cast<int>(this->operationname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Waf_Format.operationName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operationname(), target);
  }

  // optional string category = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category().data(), static_cast<int>(this->category().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "waf_format.Waf_Format.category");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->category(), target);
  }

  // optional .waf_format.Properties properties = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->properties_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:waf_format.Waf_Format)
  return target;
}

size_t Waf_Format::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:waf_format.Waf_Format)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string resourceId = 1;
    if (has_resourceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resourceid());
    }

    // optional string operationName = 2;
    if (has_operationname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationname());
    }

    // optional string category = 3;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

    // optional .waf_format.Properties properties = 4;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->properties_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Waf_Format::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:waf_format.Waf_Format)
  GOOGLE_DCHECK_NE(&from, this);
  const Waf_Format* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Waf_Format>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:waf_format.Waf_Format)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:waf_format.Waf_Format)
    MergeFrom(*source);
  }
}

void Waf_Format::MergeFrom(const Waf_Format& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:waf_format.Waf_Format)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_resourceid();
      resourceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resourceid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_operationname();
      operationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operationname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_category();
      category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_properties()->::waf_format::Properties::MergeFrom(from.properties());
    }
  }
}

void Waf_Format::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:waf_format.Waf_Format)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waf_Format::CopyFrom(const Waf_Format& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:waf_format.Waf_Format)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waf_Format::IsInitialized() const {
  return true;
}

void Waf_Format::Swap(Waf_Format* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Waf_Format::InternalSwap(Waf_Format* other) {
  using std::swap;
  resourceid_.Swap(&other->resourceid_);
  operationname_.Swap(&other->operationname_);
  category_.Swap(&other->category_);
  swap(properties_, other->properties_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Waf_Format::GetMetadata() const {
  protobuf_waf_5fformat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_waf_5fformat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace waf_format

// @@protoc_insertion_point(global_scope)
